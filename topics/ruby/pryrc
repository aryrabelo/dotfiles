Pry.config.editor = '~/.bin/vim'
Pry.config.theme = 'solarized'
Pry.config.prompt = proc do |obj, level, _|
  prompt = ''
  prompt << "#{Rails.version}@" if defined?(Rails)
  prompt << "#{RUBY_VERSION}"
  "#{prompt} (#{obj})> "
end

begin
  require 'awesome_print'
  Pry.config.print = proc { |output, value| output.puts value.ai(:indent => 2)  }
rescue LoadError => e
  warn "[WARN] #{e}"
  puts '$ gem install awesome_print'
end

if defined?(PryDebugger)
  Pry.commands.alias_command 'c', 'continue'
  Pry.commands.alias_command 's', 'step'
  Pry.commands.alias_command 'n', 'next'
  Pry.commands.alias_command 'f', 'finish'
end

def pbcopy(str, opts = {})
  IO.popen('pbcopy', 'r+') { |io| io.print str }
end

Pry.config.commands.command "pbcopy", "Copy last evaluated object to clipboard, -m if you want multiline" do
  multiline = arg_string == '-m'
  pbcopy _pry_.last_result.ai(:plain => true, :indent => 2, :index => false, :multiline => multiline)
  output.puts "Copied#{multiline ? ' multilined' : ''}!"
end

# Return only the methods not present on basic objects
class Object
  def interesting_methods
    (self.methods - Object.instance_methods).sort
  end
end
